<template>
    <div class="container">
        <div class="row">
            <div class="col-md-12">
                <div class="panel panel-default">
                    <div class="panel-heading">
                        <button @click="initAddTask()" class="btn btn-primary btn-xs pull-right">
                            + Add New %%modelNameCap%%
                        </button>
                        My %%modelNameCap%%
                    </div>
 
                    <div class="panel-body">
                        <table class="table table-bordered table-striped table-responsive" v-if="%%modelName%%s.length > 0">
                            <thead>
                                <tr>
                                    <th>
                                        %%tableColumnsHtml%%
                                    </th>
                                </tr>
                            </thead>
                            <tbody>
                                <tr v-for="(%%modelName%%, index) in %%modelName%%s">
                                    %%tableRowHtml%%
                                </tr>
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
 
        <div class="modal fade" tabindex="-1" role="dialog" id="edit_task_model">
            <div class="modal-dialog" role="document">
                <div class="modal-content">
                    <div class="modal-header">
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span
                                aria-hidden="true">&times;</span></button>
                        <h4 class="modal-title">%%modelNameCap%%</h4>
                    </div>
                    <div class="modal-body">
 
                        <div class="alert alert-danger" v-if="errors.length > 0">
                            <ul>
                                <li v-for="error in errors">{{ error }}</li>
                            </ul>
                        </div>
                        %%formFields%%
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                        <button type="button" @click="saveTask" class="btn btn-primary">Submit</button>
                    </div>
                </div><!-- /.modal-content -->
            </div><!-- /.modal-dialog -->
        </div><!-- /.modal -->
 
    </div>
</template>
 
<script>
    export default {
        data(){
            return {
                %%modelName%%: {
                    %%modelFieldsDefaultHtml%%
                },
                errors: [],
                %%modelName%%s: []
            }
        },
        methods: {
            initAdd%%modelName%%()
            {
                this.errors = [];
                $("#edit_%%modelName%%_model").modal("show");
            },
            save%%modelName%%()
            {
                var savePromise = null;
                var data = {
                
                    %%postFieldsHtml%%
                        
                };
                var id = this.%%modelName%% != null && this.%%modelName%%.id != null ? this.%%modelName%%.id : null;
                if (id) {
                    savePromise = axios.post('/%%modelName%%', data);
                }else {
                    saveProimise = axios.patch('/%%modelName%%/' + id, data);
                }
                savePromise.then(response => {
     
                    this.reset();

                    $("#edit_%%modelName%%_model").modal("hide");

                })
                .catch(error => {
                    this.errors = [];
                    if (error.response.data.errors.name) {
                        this.errors.push(error.response.data.errors.name[0]);
                    }

                    if (error.response.data.errors.description) {
                        this.errors.push(error.response.data.errors.description[0]);
                    }
                });
                
            },
            initUpdate(index)
            {
                this.errors = [];
                $('#edit_%%modelName%%').modal("show");
                this.%%modelName%% = this.%%modelName%%s[index];
            },
            reset()
            {
                %%resetHtml%%
            },
            read%%modelNameCap%%()
            {
                axios.get('/%%modelName%%')
                    .then(response => {
                        this.%%modelName%%s = response.data.%%modelName%%s;
 
                    });
            }
        }
    }
</script>